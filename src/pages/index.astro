---
import BaseLayout from "templates/BaseLayout.astro";
import { t, changeLanguage } from "i18next";
import CreateProcess from "organisms/CreateProcess.vue";

changeLanguage("en");

---
<BaseLayout>
  <h2>{ t('process.startProcess') }</h2>
  <CreateProcess client:only />
</BaseLayout>

<script>

  class QuickForm extends HTMLElement {
    form = {}
    findValues(inputs: NodeListOf<any>) {
      Array.from(inputs).forEach((input) => {
        if (input.name) {
          this.form[input.name] = (input.type === "checkbox") ? input.checked : input.value;
        }
      })
    }

    constructor() {
      super()
    
      const buttons = this.querySelectorAll('button')
      const inputs = this.querySelectorAll('input')
      const textareas = this.querySelectorAll('textarea')
      const selectors = this.querySelectorAll('select')

      const proposals = JSON.parse(this.dataset.proposals)
      const button = Array.from(buttons).find(btn => btn.id === 'submit')

      button.addEventListener('click', async() => {
        this.form = {}
        this.findValues(inputs)
        this.findValues(textareas)
        this.findValues(selectors)
        const lang = document.documentElement.lang
        //addAlert(alertList, alerts[1].cloneNode(true))
        this.form['proposals'] = this.form['defaultProposals'] ? proposals : [] 
        let res: any, json: any;
        if (import.meta.env.DEV) {
          window.location.href = `/${lang !== 'en' ? lang + '/' : '' }process/dev/proposals`
        }
        else {
          try {
            res = await fetch(`${location.origin}/api/process`, {
              method: "POST",
              headers: {'Content-Type':'application/json'},
              body: JSON.stringify(this.form)
            });
            json = await res.json();
          } catch (error) {
            console.error(error);
            return;
          }
          window.location.href = `/${lang !== 'en' ? lang + '/' : '' }process/${json.id}/proposals`
        }
        
      })
    }
  }
  customElements.define('quick-form', QuickForm)

</script>
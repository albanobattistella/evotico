---
import { t, changeLanguage } from "i18next";
import BaseLayout from "layouts/BaseLayout.astro";
import ProcessInfo from "@/process/ProcessInfo.astro";
import { processes } from "stores/userStore";

changeLanguage("de");

const allProcesses = processes.get();
---

<BaseLayout title={t('buttons.dashboard')} description={t('description')}>
  {allProcesses.length > 0 ? (
    <div>
      {allProcesses.map(uuid => (
        <ProcessInfo key={uuid} />
      ))}
      <button class="btn-floating" id="exportButton">Export</button>
    </div>
  ) : (
    <div class="empty-state">
      <p>{t('dashboard.noProcesses')}</p>
      <button class="btn btn-primary btn-circle absolute right-5 bottom-20" id="addProcessFab">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-6 h-6 stroke-current">             
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v14m7-7H5"></path>             
        </svg>
      </button>
    </div>
  )}
</BaseLayout>

<script>
import { processes, addProcess } from 'stores/userStore';
import { saveAs } from 'file-saver';


const addButton = document.getElementById("addProcessButton") as HTMLButtonElement;
  addButton.addEventListener("click", addProcessWithUUID);

function addProcessWithUUID(): void {
    const uuidInput = document.getElementById("processUUID") as HTMLInputElement;
    const uuid = uuidInput.value;
    addProcess(uuid);
}

function importProcessesFromCSV(file: any) {
  // Function to read the CSV file and extract UUIDs
  // Update processes with the extracted UUIDs
}
const addFab = document.getElementById("addProcessFab") as HTMLButtonElement;
addFab.addEventListener("click", () => {
  // Logic to open modal or tooltip with options to add or create process
});

function exportProcessesToCSV() {
  const uuids = processes.get();
  const csvContent = "data:text/csv;charset=utf-8," + uuids.join("\n");
  const encodedUri = encodeURI(csvContent);
  saveAs(encodedUri, "processes.csv");
}


const exportButton = document.getElementById("exportButton") as HTMLButtonElement;
exportButton.addEventListener("click", exportProcessesToCSV);

// Add event listener for file input to handle CSV import
const fileInput = document.getElementById("fileInput") as HTMLElement;
fileInput.addEventListener("change", (event) => {
  const file = event.target.files[0];
  importProcessesFromCSV(file);
});


</script>

<style>
  .empty-state {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    text-align: center;
  }

  .btn-floating {
    position: fixed;
    right: 20px;
    bottom: 20px;
    border-radius: 50%;
    width: 56px;
    height: 56px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    cursor: pointer;
    z-index: 10;
    /* Add more styles for your FAB here */
  }
</style>
---
import { t, changeLanguage } from "i18next";
import CreateProcessLayout from "layouts/CreateProcessLayout.astro";
import weightingOptions from "helpers/weightingOptions";
import Modal from '@/ui/Modal.astro'
import ContentDoc from '@/ui/ContentDoc.astro'

changeLanguage("en");
---

<CreateProcessLayout step={1} title={t('buttons.home')} description={t('description')}>
  <div id="scrollTopicQuestion" />
  <p>{ t('process.topic') }</p>
  <input id="topicQuestion" name="topicQuestion" class="input input-bordered w-full" type="text"/>
  <br/>
  <p>{ t('process.description') }</p>
  <div id="description"/>

  <details class="text-center">
    <summary class="cursor-pointer text-indianared mt-6 ">Show advanced options</summary>

      <div class="flex justify-center flex-col mt-2 space-x-4">
        <div class="flex justify-center items-center">
          <h4>Only measure resistance</h4>
          <label class="switch ml-2">
            <input id="resistanceCheckbox" type="checkbox">
            <span class="slider"></span>
          </label>
        </div>
        <div class="flex justify-center items-center">
          <span>{ t('process.weighting') }</span>
          <span class="flex justify-center items-center">
            <select id="select" name="weighting" class="select mx-2 select-bordered mt-2">
              {weightingOptions.map(weight => (
                <option value={weight.value}>
                  { Number(weight.value) > 0 ? <span>{ weight.label }</span> : <span>&infin;</span> }
                </option>
              ))}
            </select>
            
        
            <Modal id="weightingInfo">
              <h3>{ t('process.weighting') }</h3>
              <ContentDoc file_name="NegativeScoreWeighting"/>
            </Modal>
          </span>
        </div>
    </details>
  </div>

</CreateProcessLayout>

<script>
  import { process } from 'stores/processStore';
  import { createQuill, updateQuill } from "composable/quillUtils";

  let description = createQuill('#description');
  description = updateQuill(description, process.get().description);
  description.on('text-change', () => process.setKey('description', description.getContents()));

  const $weighting = process.get().weighting;
  const selectElement = document.getElementById('select') as HTMLInputElement;
  selectElement.value = $weighting;
  selectElement.addEventListener('change', (e: any) => process.setKey('weighting', e.target.value));
  
  const resistanceCheckbox = document.getElementById('resistanceCheckbox') as HTMLElement;
  resistanceCheckbox.addEventListener('change', function() {
    process.setKey('resistance', this.checked);
    if (this.checked) {
      selectElement.disabled = true;
      selectElement.classList.add('disabled-select');
    } else {
      selectElement.disabled = false;
      selectElement.classList.remove('disabled-select');
    }
  });
</script>
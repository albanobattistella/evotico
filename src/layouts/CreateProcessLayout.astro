---
import BaseLayout from 'layouts/BaseLayout.astro'
import Alert from "@/ui/Alert.astro";
import AlertList from "@/ui/AlertList.astro";
import { parseCookie } from 'helpers/cookieHelpers'
import { t } from "i18next";

interface Props {
    step: number,
}

const { step } = Astro.props;

const cookieHeader = Astro.request.headers.get('cookie');
const parsedCookies = cookieHeader ? parseCookie(cookieHeader) : {};
const { phases = '', title = '' } = parsedCookies;

// Define the steps and their respective links outside the template.
const steps = [
  { stepNumber: 1, href: "/create" },
  { stepNumber: 2, href: "/create/phases", disabled: !title },
  { stepNumber: 3, href: phases === 'full' ? "/create/full-process" : "/create/voting-only", disabled: (!title && !phases) },
  { stepNumber: 4, href: "/create/review", disabled: (!title && !phases) }
];
---

<BaseLayout title={ t('setup.process')} description={t('description')}>
  <h1 class="text-center">{ t('setup.process') }</h1>
  <div class="flex justify-center space-x-2 m-2">
    {steps.map(({ stepNumber, href, disabled }) => (
      <a href={href} class={disabled ? 'pointer-events-none' : ''}>
        <div class={`w-4 h-4 rounded-full ${
          step === stepNumber ? 'bg-indianred' : 
          step > stepNumber ? 'bg-linkwhite' : 
          'bg-gray-300'
        } ${disabled ? 'bg-gray-500' : ''}`}></div>
      </a>
    ))}
  </div>
  <slot/>

  <br/>

  <AlertList>
    <Alert icon="warning" error>{ t('alert.error.topicQuestion') }</Alert>
    <Alert icon="checkmark-outline" success>{ t('alert.success.createProcess') }</Alert>
    <Alert icon="warning" error>{ t('alert.error.proposalsMissing') }</Alert>
    <Alert icon="warning" error>{ t('alert.error.payloadSizeTooLarge') }</Alert>
    <Alert icon="checkmark-outline" warning>{ t('alert.success.creatingProcess') }</Alert>
  </AlertList>
</BaseLayout>

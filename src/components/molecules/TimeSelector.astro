---
import { t } from "i18next";
import { localizePath } from "astro-i18next";
const { slideSelector = true } = Astro.props;

const proposalTimeLeft = { minutes: 20, hours: 3, days: 0 }
const votingTimeLeft = { minutes: 20, hours: 3, days: 0 }
---
<style is:inline>
    .show {
        display: block;
    }
    .hide {
        display: none;
    }

</style>
<time-selector data-message={slideSelector}>
    <h2>{ t('quick.timeLeftHeading') }</h2>
    <button class="btn" id="timeSelector">

        <span class={ slideSelector ? 'slider show' : 'slider hide'}>
            { t('quick.switchSlider') }
            </span>    
        <span class={ !slideSelector ? 'calendar show' : 'calendar hide'}>
            { t('quick.switchCalendar') }
        </span>
        
    </button>
    <div class={ !slideSelector ? 'slider show' : 'slider hide'}>
        <br>
        <h4>{ t('wip') }</h4>
        <br>
        <a href={ localizePath('/donate') } class="btn">
          { t('nav.donate') }
        </a>
    </div>
    <div class={ !slideSelector ? 'calendar show' : 'calendar hide'}>
        <div class="p-4 m-4">
            <h2>
              { t('quick.proposalTime') }
            </h2>
            { t('time.minutes') }
            <input name="proposalMinutes" type="range" min="1" max="60" value={proposalTimeLeft.minutes} class="range" />
            { t('time.hours') }
            <input name="proposalHours" type="range" min="0" max="24" value={proposalTimeLeft.hours} class="range" />
            { t('time.days') }
            <input name="proposalDays" type="range" min="0" max="90" value={proposalTimeLeft.days} class="range" />
          </div>
          <div class="p-4 m-4">
            <h2>
                { t('quick.votingTime') }
            </h2>
            { t('time.minutes') }
            <input name="votingMinutes" type="range" min="1" max="60" value={votingTimeLeft.minutes} class="range" />
            { t('time.hours') }
            <input name="votingHours" type="range" min="0" max="24" value={votingTimeLeft.hours} class="range" />
            { t('time.days') }
            <input name="votingDays" type="range" min="0" max="90" value={votingTimeLeft.days} class="range" />
          </div>
    </div>
</time-selector>
<script>
  
    class TimeSelector extends HTMLElement {
        hideOrShow(className, val) {
            const list = this.getElementsByClassName(className)
            for (let i = 0; i < list.length; i++) {
                const slider = list[i]
                slider.className = val ? 'show '  : 'hide '
                slider.className += className
            }
        }
        updateDOM(val) {
            this.hideOrShow('slider', val)
            this.hideOrShow('calendar', !val)
        }
        constructor() {
            super()
            let message = Boolean(this.dataset.message);
            const button = this.querySelector('button')

            this.updateDOM(message)
            button.addEventListener('click', () => {
                message = !message
                this.updateDOM(message)
            })
        }
    }
    customElements.define('time-selector', TimeSelector)

</script>
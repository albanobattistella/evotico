---
import { t } from 'i18next';

import { process } from 'stores/processStore';
const $process = process.get()
---

<phase-selector>
  <div class="flex justify-around">
      <div class="flex items-center">
        <input id="full-phase" type="radio" name="phase-radio"  class="radio radio-primary" checked={$process.phases === 'full'} />
        <label for="full-phase" class="mx-2 cursor-pointer	" >{ t('process.phases.full') }</label>
      </div>
      <div class="flex items-center">
        <input id="voting-phase" type="radio" name="phase-radio" class="radio radio-primary" checked={$process.phases === 'voting'} />
        <label for="voting-phase" class="mx-2 cursor-pointer	">{ t('process.phases.voting') }</label>
      </div>
  </div>
</phase-selector>
    

<script>
  import { process } from 'stores/processStore';

  const $process = process.get()

  class PhaseSelector extends HTMLElement {
    constructor() {
      super()
      const fullPhase = this.querySelector('#full-phase') as HTMLInputElement
      fullPhase.addEventListener('click', () =>  process.setKey('phases', 'full'))
      fullPhase.checked = $process.phases === 'full'
      
      const votingPhase = this.querySelector('#voting-phase') as HTMLInputElement 
      votingPhase.addEventListener('click', () =>  process.setKey('phases', 'voting'))
      votingPhase.checked = $process.phases === 'voting'
    }
  }

  customElements.define('phase-selector', PhaseSelector)

</script>
---
import weightingOptions from "composable/weightingOptions";
import { t } from 'i18next';
import Modal from 'molecules/Modal.astro'
import ContentDoc from 'atoms/ContentDoc.astro'
---

<weight-selector>
  <span>{ t('process.weighting') }</span>
  <span class="flex justify-center items-center">
    <select id="select" name="weighting" class="select mx-2 select-bordered mt-2">
      {weightingOptions.map(weight => (
        <option value={weight.value}>
          { Number(weight.value) > 0 ? <span>{ weight.label }</span> : <span>&infin;</span> }
        </option>
      ))}
    </select>
    

    <Modal id="weightingInfo">
      <h3>{ t('process.weighting') }</h3>
      <ContentDoc file_name="NegativeScoreWeighting"/>
    </Modal>
  </span>
</weight-selector>

<script>
  import { process } from '../../stores/processStore';
  const $weighting = process.get().weighting

  class WeightSelector extends HTMLElement {
    constructor() {
      super()
      const selectElement = this.querySelector('#select') as HTMLInputElement
      selectElement.value = $weighting
      selectElement.addEventListener('change', (e: any) => process.setKey('weighting', e.target.value))
    }

  }
  customElements.define('weight-selector', WeightSelector)

</script>
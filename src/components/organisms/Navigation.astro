---
import { Icon } from 'astro-icon'
import i18next, { t } from "i18next";
import { localizePath } from "astro-i18next";

const supportedLanguages = i18next.languages;
const currentLanguage = i18next.language;


const { pathname } = Astro.url;

const menu = [
  {
    path: '/',
    icon: 'campsite',
    label: 'home',
  },
  {
    path: '/quick',
    icon: 'flash',
    label: 'quick',
  },
  {
    path: '/about',
    icon: 'book',
    label: 'about',
  },
  {
    path: '/donate',
    icon: 'favorite',
    label: 'donate',
  }
]

const selected = (item: any) => {
  const pathname = Astro.url.pathname
  if (pathname.includes(item.path) && item.path !== '/' || item.path === pathname)
    return 'selected'
  else
    return ''
}

---
<style is:inline>
  .sun { display: none; }
  .moon { display: block; }

  :global(.dark) .sun { display: block; }
  :global(.dark) .moon { display: none; }

  nav .btn-link {
    color: inherit;
  }
  nav .btn-link:hover{
    color: indianred;
  }
  .selected {
    color:indianred !important;
  }
  
</style>


<nav class="navbar bg-base-200">
  { menu.map((item) => (
    <>
      <a class={'btn btn-link ' + selected(item)} href={localizePath(item.path)}>
        <span class="flex items-center"> 
          <Icon width="22" name={item.icon}/>
          <p class="pl-1">{t('nav.' + item.label)}</p>
        </span>
      </a>
    </>
  ))}
    <span class="flex-grow" />

    <select class="select select-xs mx-2" onchange="location = this.value">
      {
        supportedLanguages.map((supportedLanguage: string) => {
          let value = localizePath(pathname, supportedLanguage);

          return (
          <option selected={supportedLanguage === currentLanguage} value={value}>{ supportedLanguage }</option>

          )
        }
      )}
    </select>

    <button id="themeSelector" class="btn btn-ghost btn-sm">
      <Icon class="sun" width="22" name="sun"/>
      <Icon class="moon" width="22" name="moon" />
    </button>
  </nav>
<script>
  const themeSelector = document.getElementById('themeSelector')
  themeSelector.addEventListener('click', () => {
    let theme = window.localStorage.getItem("theme")
    theme = theme === 'dark' ? 'light' : 'dark'
    document.documentElement.dataset.theme = theme
    document.documentElement.className = theme

    window.localStorage.setItem("theme", theme)
  })  
</script>



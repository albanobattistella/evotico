---
import i18next from "i18next";
import { HeadHrefLangs } from "astro-i18next/components";
import Header from "organisms/Header.astro";
import Footer from "organisms/Footer.astro";

import 'assets/quill.snow.css';
import "assets/global.css"

const {title, description} = Astro.props;

const { url } = Astro;

const href = url.href
const display_title = `Ukuvota ${title ? `- ${title}` : ''}`
---

<html lang={i18next.language} data-theme="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover,user-scalable=no" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="description" content={description} />
    <meta name="keywords" content="ukuvota, voting, democracy, consens, collaborative" />
    <meta name="author" content="Waotzi" />
    <link rel="icon" type="image/png" href="/favicon.png">

    <title>{display_title}</title>
    <meta name="generator" content={Astro.generator} />
    <!-- SEO -->
    <HeadHrefLangs />
    <meta name="robots" content="index,follow" />
    <meta name="googlebot" content="index,follow" />

      <!-- Open Graph -->
    <meta property="og:title" content={display_title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={`${href}social_logo.png`} />
    <meta property="og:url" content={href} />
    <meta property="og:type" content="website" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={display_title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${href}social_logo.png`} />

    <!-- Plausible analytics -->
    { url.hostname !== 'localhost' &&
    <script defer data-api="/api/event" data-domain="ukuvota.world" src="/js/script.js"></script>
    }
  </head>
  <body>
    <Header/>
    <br/>
    <main class="card bg-base-200 shadow-xl">
        <slot />
    </main>
    <br/>
    <Footer/>
  </body>
</html>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme"))
      return localStorage.getItem("theme");
    if (window.matchMedia("(prefers-color-scheme: dark)").matches)
      return "dark";
    return "light";
  })();
  document.documentElement.dataset.theme=theme
  document.documentElement.classList = theme

  window.localStorage.setItem("theme", theme);

  const hash = window.location.hash
  
  if (hash.includes('#/app/')) {
    const newHash = hash.replace('#/app/', '');
    const cleanHash = newHash.split('/')[0]; // Get the part before the first '/' after the hash

    window.location.href = `${location.origin}/process/${cleanHash}`
  }

</script>

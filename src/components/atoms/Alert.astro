---
import { Icon } from "astro-icon";

interface Props {
    error?: boolean
    success?: boolean
    warning?: boolean
    icon: string
}

const { error, success, warning, icon } = Astro.props;
const classList = `alert w-80 shadow-lg m-2 cursor-pointer ${error ? 'alert-error' : success ? 'alert-success' : warning ? 'alert-warning' : ''}`;
const showAlertId = `show-alert-${Math.random().toString(36).substr(2, 9)}`;
---

<alert-element id={showAlertId} class={classList} style="display: none; pointer-events: auto;">
    <div>
        <Icon width="32" name={icon} />
        <span><slot/></span>
    </div>
</alert-element>

<script>
  class AlertElement extends HTMLElement {
    visible = false;

    constructor() {
      super();

      this.addEventListener('click', () => {
        this.visible = false;
        this.updateDisplay();
      });
    }


    updateDisplay() {
      this.style.display = this.visible ? 'block' : 'none';
    }

    static get observedAttributes() {
      return ['data-trigger'];
    }
  }

  customElements.define('alert-element', AlertElement);
</script>
